type Dao @entity {
  id: ID!
  name: String!
  symbol: String!
}

############################################
####            IN PROGRESS             ####
############################################

type Auction @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  startTime: Int!
  endTime: Int!
  createdAt: Int!
  bids: [AuctionBidEvent!]!
  extended: Boolean
  winner: String
  amount: String
}

type Proposal @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  proposer: String!
  targets: [String!]!
  values: [String!]!
  signatures: [String]
  calldatas: [String!]!
  voteStart: Int!
  voteEnd: Int!
  description: String!
  createdAt: Int!
  canceled: Boolean
  executed: Boolean
  queued: Boolean
  vetoed: Boolean
  votes: [VoteCastEvent!]
}

type Delegate @entity {
  id: ID!
  delegate: String!
  dao: Dao!
  votes: Int!
  delegators: [String!]
}

type Token @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  seed: String!
  owner: String!
  createdAt: Int!
}

############################################
############################################

type AuctionBidEvent @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  sender: String!
  value: String!
  extended: Boolean
  createdAt: Int!
}

type AuctionCreatedEvent @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  startTime: Int!
  endTime: Int!
  createdAt: Int!
}

type AuctionExtendedEvent @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  endTime: Int!
  createdAt: Int!
}

type AuctionMinBidIncrementPercentageUpdatedEvent @entity {
  id: ID!
  dao: Dao!
  minBidIncrementPercentage: Int!
  createdAt: Int!
}

type AuctionReservePriceUpdatedEvent @entity {
  id: ID!
  dao: Dao!
  reservePrice: String!
  createdAt: Int!
}

type AuctionSettledEvent @entity {
  id: ID!
  tokenId: Int!
  dao: Dao!
  winner: String!
  amount: String!
  createdAt: Int!
}

type AuctionTimeBufferUpdatedEvent @entity {
  id: ID!
  dao: Dao!
  timeBuffer: Int!
  createdAt: Int!
}

type OwnershipTransferEventredEvent @entity {
  id: ID!
  dao: Dao!
  previousOwner: String!
  newOwner: String!
  createdAt: Int!
}

type PausedEvent @entity {
  id: ID!
  dao: Dao!
  account: String!
  createdAt: Int!
}

type UnpausedEvent @entity {
  id: ID!
  dao: Dao!
  account: String!
  createdAt: Int!
}

type ApprovalEvent @entity {
  id: ID!
  dao: Dao!
  owner: String!
  approved: String!
  tokenId: Int!
  createdAt: Int!
}

type ApprovalForAllEvent @entity {
  id: ID!
  dao: Dao!
  owner: String!
  operator: String!
  approved: Boolean!
  createdAt: Int!
}

type DelegateChangedEvent @entity {
  id: ID!
  dao: Dao!
  delegator: String!
  fromDelegate: String!
  toDelegate: String!
  createdAt: Int!
}

type DelegateVotesChangedEvent @entity {
  id: ID!
  dao: Dao!
  delegate: String!
  previousBalance: Int!
  newBalance: Int!
  createdAt: Int!
}

type NftBurnedEvent @entity {
  id: ID!
  dao: Dao!
  tokenId: Int!
  createdAt: Int!
}

type NftCreatedEvent @entity {
  id: ID!
  dao: Dao!
  seed: String!
  tokenId: Int!
  createdAt: Int!
}

type TransferEvent @entity {
  id: ID!
  dao: Dao!
  from: String!
  to: String!
  tokenId: Int!
  createdAt: Int!
}

type ProposalCanceledEvent @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  createdAt: Int!
}

type ProposalCreatedEvent @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  proposer: String!
  targets: [String!]!
  values: [String!]!
  signatures: [String]
  calldatas: [String!]!
  voteStart: Int!
  voteEnd: Int!
  description: String!
  createdAt: Int!
}

type ProposalExecutedEvent @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  createdAt: Int!
}

type ProposalQueuedEvent @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  eta: Int!
  createdAt: Int!
}

type ProposalVetoedEvent @entity {
  id: ID!
  dao: Dao!
  proposalId: Int!
  createdAt: Int!
}

type RefundableVoteEvent @entity {
  id: ID!
  dao: Dao!
  voter: String!
  refundAmount: String!
  refundSent: Boolean!
  createdAt: Int!
}

type VoteCastEvent @entity {
  id: ID!
  dao: Dao!
  voter: String!
  proposalId: Int!
  support: Int!
  votes: Int!
  reason: String!
  createdAt: Int!
}
